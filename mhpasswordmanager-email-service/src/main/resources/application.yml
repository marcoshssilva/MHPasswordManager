server:
  port: 12013
  servlet:
    context-path: /mypass-manager/emails
spring:
#  profiles:
#    default: local
  application:
    name: email-service
  config:
    import:
      - optional:configserver:${SPRING_CONFIG_SERVER_URI:http://localhost:8888}
eureka:
  client:
    service-url:
      defaultZone: http://eureka:eureka@localhost:8761/eureka
springdoc:
  version: @project.version@
  title: @project.name@
  description: @project.description@
  license-name: 'MIT'
  license-url: 'https://github.com/marcoshssilva/MHPasswordManager/blob/main/LICENSE'
---
spring:
  config:
    activate:
      on-profile: local
  security:
    oauth2:
      resource-server:
        jwt:
          issuer-uri: http://localhost:12010
  redis:
    host: 127.0.0.1
    password: 'MHP@SSW0R3#20230401'
    port: 6379
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    virtual-host: vhost-password-manager
    username: email-service-pm
    password: email-service-pm-P@ss
  mail:
    host: localhost
    # username: je7ls6pyin
    # password: 5n4laalrzvtseypixfgl
    properties:
      mail.transport.protocol: smtp
      mail.smtp.auth: false
      mail.smtp.port: 1025
      mail.smtp.starttls.enable: false
      mail.smtp.starttls.required: false
application:
  email:
    type: mail
    default-sender: ${APPLICATION_EMAIL_DEFAULT_SENDER:no-reply@localhost.fake.mail.com}
    enable-redirect-mail: ${APPLICATION_EMAIL_ENABLE_REDIRECT_MAIL:true}
    address-redirect-mail: ${APPLICATION_EMAIL_ADDRESS_REDIRECT_MAIL:no-reply@localhost.fake.mail.com}
logging:
  level:
    br.com.marcoshssilva.mhpasswordmanager.emailservice.amqp.listeners:
      QueueSendConfirmationRegisteredUserListener: debug
      QueueSendRecoveryCode: debug
      QueueSendEmailListener: debug
springdoc:
  swagger-ui:
    oauth2-redirect-url: ${SPRINGDOC_SWAGGERUI_OAUTH2_REDIRECT_URL:http://127.0.0.1:8080/mypass-manager/emails/swagger-ui/redirect}
    oauth2-authorization-url: ${SPRINGDOC_SWAGGERUI_OAUTH2_AUTHORIZATION_URL:http://127.0.0.1:8080/mypass-manager/auth/oauth2/authorize} # custom, doesnt exists on springdoc open-api
    oauth2-token-url: ${SPRINGDOC_SWAGGERUI_OAUTH2_TOKEN_URL:http://127.0.0.1:8080/mypass-manager/auth/oauth2/token} # custom, doesnt exists on springdoc open-api
    csrf:
      enabled: false
---
spring:
  config:
    activate:
      on-profile: test
  security:
    oauth2:
      resource-server:
        jwt:
          issuer-uri: http://mhpasswordmanager.test.fake.com
  mail:
    host: localhost
    # username: je7ls6pyin
    # password: 5n4laalrzvtseypixfgl
    properties:
      mail.transport.protocol: smtp
      mail.smtp.auth: false
      mail.smtp.port: 25
      mail.smtp.starttls.enable: false
      mail.smtp.starttls.required: false
  session:
    store-type: none
eureka:
  instance:
    hostname: localhost
    prefer-ip-address: true
  client:
    enabled: false
application:
  email:
    type: fake-mail
    default-sender: 'no-reply@localhost.fake.mail.com'
    enable-redirect-mail: false
    address-redirect-mail: 'no-reply@localhost.fake.mail.com'
management:
  health:
    mail:
      enabled: false